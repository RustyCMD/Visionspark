// Mocks generated by Mockito 5.4.6 from annotations
// in visionspark/test/features/account/account_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i7;
import 'dart:typed_data' as _i8;

import 'package:image_picker/image_picker.dart' as _i9;
import 'package:image_picker_platform_interface/image_picker_platform_interface.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:storage_client/src/fetch.dart' as _i4;
import 'package:supabase/supabase.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFunctionsClient_0 extends _i1.SmartFake
    implements _i2.FunctionsClient {
  _FakeFunctionsClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_1 extends _i1.SmartFake
    implements _i2.SupabaseStorageClient {
  _FakeSupabaseStorageClient_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_2 extends _i1.SmartFake
    implements _i2.RealtimeClient {
  _FakeRealtimeClient_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_3 extends _i1.SmartFake
    implements _i2.PostgrestClient {
  _FakePostgrestClient_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_4 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i2.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_6 extends _i1.SmartFake
    implements _i2.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_7<T1> extends _i1.SmartFake
    implements _i2.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_8 extends _i1.SmartFake
    implements _i2.RealtimeChannel {
  _FakeRealtimeChannel_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueAdminApi_9 extends _i1.SmartFake
    implements _i2.GoTrueAdminApi {
  _FakeGoTrueAdminApi_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueMFAApi_10 extends _i1.SmartFake implements _i2.GoTrueMFAApi {
  _FakeGoTrueMFAApi_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_11 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOAuthResponse_12 extends _i1.SmartFake implements _i2.OAuthResponse {
  _FakeOAuthResponse_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthSessionUrlResponse_13 extends _i1.SmartFake
    implements _i2.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResendResponse_14 extends _i1.SmartFake
    implements _i2.ResendResponse {
  _FakeResendResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserResponse_15 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObject_16 extends _i1.SmartFake implements Object {
  _FakeObject_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStreamFilterBuilder_17 extends _i1.SmartFake
    implements _i2.SupabaseStreamFilterBuilder {
  _FakeSupabaseStreamFilterBuilder_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

class _FakePostgrestQueryBuilder_18<T> extends _i1.SmartFake
    implements _i2.PostgrestQueryBuilder<T> {
  _FakePostgrestQueryBuilder_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestBuilder_19<T, S, R> extends _i1.SmartFake
    implements _i2.PostgrestBuilder<T, S, R> {
  _FakePostgrestBuilder_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUri_20 extends _i1.SmartFake implements Uri {
  _FakeUri_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_21<T> extends _i1.SmartFake implements _i3.Future<T> {
  _FakeFuture_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFetch_22 extends _i1.SmartFake implements _i4.Fetch {
  _FakeFetch_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStorageFileApi_23 extends _i1.SmartFake
    implements _i2.StorageFileApi {
  _FakeStorageFileApi_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBucket_24 extends _i1.SmartFake implements _i2.Bucket {
  _FakeBucket_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSignedUploadURLResponse_25 extends _i1.SmartFake
    implements _i2.SignedUploadURLResponse {
  _FakeSignedUploadURLResponse_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFileObjectV2_26 extends _i1.SmartFake implements _i2.FileObjectV2 {
  _FakeFileObjectV2_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLostDataResponse_27 extends _i1.SmartFake
    implements _i5.LostDataResponse {
  _FakeLostDataResponse_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i2.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_0(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i2.FunctionsClient);

  @override
  _i2.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_1(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i2.SupabaseStorageClient);

  @override
  _i2.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_2(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i2.RealtimeClient);

  @override
  _i2.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_3(this, Invocation.getter(#rest)),
          )
          as _i2.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i2.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_4(this, Invocation.getter(#auth)),
          )
          as _i2.GoTrueClient);

  @override
  set functions(_i2.FunctionsClient? _functions) => super.noSuchMethod(
    Invocation.setter(#functions, _functions),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i2.SupabaseStorageClient? _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i2.RealtimeClient? _realtime) => super.noSuchMethod(
    Invocation.setter(#realtime, _realtime),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i2.PostgrestClient? _rest) => super.noSuchMethod(
    Invocation.setter(#rest, _rest),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i2.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_5(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i2.SupabaseQueryBuilder);

  @override
  _i2.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_6(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i2.SupabaseQuerySchema);

  @override
  _i2.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_7<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i2.PostgrestFilterBuilder<T>);

  @override
  _i2.RealtimeChannel channel(
    String? name, {
    _i2.RealtimeChannelConfig? opts = const _i2.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_8(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i2.RealtimeChannel);

  @override
  List<_i2.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i2.RealtimeChannel>[],
          )
          as List<_i2.RealtimeChannel>);

  @override
  _i3.Future<String> removeChannel(_i2.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i2.GoTrueClient {
  MockGoTrueClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoTrueAdminApi get admin =>
      (super.noSuchMethod(
            Invocation.getter(#admin),
            returnValue: _FakeGoTrueAdminApi_9(this, Invocation.getter(#admin)),
          )
          as _i2.GoTrueAdminApi);

  @override
  _i2.GoTrueMFAApi get mfa =>
      (super.noSuchMethod(
            Invocation.getter(#mfa),
            returnValue: _FakeGoTrueMFAApi_10(this, Invocation.getter(#mfa)),
          )
          as _i2.GoTrueMFAApi);

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChange =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChange),
            returnValue: _i3.Stream<_i2.AuthState>.empty(),
          )
          as _i3.Stream<_i2.AuthState>);

  @override
  _i3.Stream<_i2.AuthState> get onAuthStateChangeSync =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChangeSync),
            returnValue: _i3.Stream<_i2.AuthState>.empty(),
          )
          as _i3.Stream<_i2.AuthState>);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  set admin(_i2.GoTrueAdminApi? _admin) => super.noSuchMethod(
    Invocation.setter(#admin, _admin),
    returnValueForMissingStub: null,
  );

  @override
  set mfa(_i2.GoTrueMFAApi? _mfa) => super.noSuchMethod(
    Invocation.setter(#mfa, _mfa),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<_i2.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, [], {
              #data: data,
              #captchaToken: captchaToken,
            }),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPassword, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            }),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.OAuthResponse> getOAuthSignInUrl({
    required _i2.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOAuthSignInUrl, [], {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            }),
            returnValue: _i3.Future<_i2.OAuthResponse>.value(
              _FakeOAuthResponse_12(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> exchangeCodeForSession(
    String? authCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exchangeCodeForSession, [authCode]),
            returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_13(
                this,
                Invocation.method(#exchangeCodeForSession, [authCode]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<_i2.AuthResponse> signInWithIdToken({
    required _i2.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithIdToken, [], {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            }),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i2.OtpChannel? channel = _i2.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithOtp, [], {
              #email: email,
              #phone: phone,
              #emailRedirectTo: emailRedirectTo,
              #shouldCreateUser: shouldCreateUser,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i2.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [], {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            }),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSSOSignInUrl, [], {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<_i2.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSession, [refreshToken]),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<void> reauthenticate() =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticate, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.ResendResponse> resend({
    String? email,
    String? phone,
    required _i2.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resend, [], {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i3.Future<_i2.ResendResponse>.value(
              _FakeResendResponse_14(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.ResendResponse>);

  @override
  _i3.Future<_i2.UserResponse> getUser([String? jwt]) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [jwt]),
            returnValue: _i3.Future<_i2.UserResponse>.value(
              _FakeUserResponse_15(this, Invocation.method(#getUser, [jwt])),
            ),
          )
          as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.UserResponse> updateUser(
    _i2.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateUser,
              [attributes],
              {#emailRedirectTo: emailRedirectTo},
            ),
            returnValue: _i3.Future<_i2.UserResponse>.value(
              _FakeUserResponse_15(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.UserResponse>);

  @override
  _i3.Future<_i2.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [refreshToken]),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  _i3.Future<_i2.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSessionFromUrl,
              [originUrl],
              {#storeSession: storeSession},
            ),
            returnValue: _i3.Future<_i2.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_13(
                this,
                Invocation.method(
                  #getSessionFromUrl,
                  [originUrl],
                  {#storeSession: storeSession},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.AuthSessionUrlResponse>);

  @override
  _i3.Future<void> signOut({
    _i2.SignOutScope? scope = _i2.SignOutScope.local,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signOut, [], {#scope: scope}),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #resetPasswordForEmail,
              [email],
              {#redirectTo: redirectTo, #captchaToken: captchaToken},
            ),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i2.UserIdentity>> getUserIdentities() =>
      (super.noSuchMethod(
            Invocation.method(#getUserIdentities, []),
            returnValue: _i3.Future<List<_i2.UserIdentity>>.value(
              <_i2.UserIdentity>[],
            ),
          )
          as _i3.Future<List<_i2.UserIdentity>>);

  @override
  _i3.Future<_i2.OAuthResponse> getLinkIdentityUrl(
    _i2.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getLinkIdentityUrl,
              [provider],
              {
                #redirectTo: redirectTo,
                #scopes: scopes,
                #queryParams: queryParams,
              },
            ),
            returnValue: _i3.Future<_i2.OAuthResponse>.value(
              _FakeOAuthResponse_12(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.OAuthResponse>);

  @override
  _i3.Future<void> unlinkIdentity(_i2.UserIdentity? identity) =>
      (super.noSuchMethod(
            Invocation.method(#unlinkIdentity, [identity]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> setInitialSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#setInitialSession, [jsonStr]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i2.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#recoverSession, [jsonStr]),
            returnValue: _i3.Future<_i2.AuthResponse>.value(
              _FakeAuthResponse_11(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
          )
          as _i3.Future<_i2.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
    Invocation.method(#startAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
    Invocation.method(#stopAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyAllSubscribers(
    _i2.AuthChangeEvent? event, {
    _i2.Session? session,
    bool? broadcast = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #notifyAllSubscribers,
      [event],
      {#session: session, #broadcast: broadcast},
    ),
    returnValueForMissingStub: null,
  );

  @override
  Object notifyException(Object? exception, [StackTrace? stackTrace]) =>
      (super.noSuchMethod(
            Invocation.method(#notifyException, [exception, stackTrace]),
            returnValue: _FakeObject_16(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
          )
          as Object);
}

/// A class which mocks [SupabaseQueryBuilder].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseQueryBuilder extends _i1.Mock
    implements _i2.SupabaseQueryBuilder {
  MockSupabaseQueryBuilder() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SupabaseStreamFilterBuilder stream({required List<String>? primaryKey}) =>
      (super.noSuchMethod(
            Invocation.method(#stream, [], {#primaryKey: primaryKey}),
            returnValue: _FakeSupabaseStreamFilterBuilder_17(
              this,
              Invocation.method(#stream, [], {#primaryKey: primaryKey}),
            ),
          )
          as _i2.SupabaseStreamFilterBuilder);

  @override
  _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>> select([
    String? columns = '*',
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#select, [columns]),
            returnValue:
                _FakePostgrestFilterBuilder_7<List<Map<String, dynamic>>>(
                  this,
                  Invocation.method(#select, [columns]),
                ),
          )
          as _i2.PostgrestFilterBuilder<List<Map<String, dynamic>>>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> insert(
    Object? values, {
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #insert,
              [values],
              {#defaultToNull: defaultToNull},
            ),
            returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
              this,
              Invocation.method(
                #insert,
                [values],
                {#defaultToNull: defaultToNull},
              ),
            ),
          )
          as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> upsert(
    Object? values, {
    String? onConflict,
    bool? ignoreDuplicates = false,
    bool? defaultToNull = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #upsert,
              [values],
              {
                #onConflict: onConflict,
                #ignoreDuplicates: ignoreDuplicates,
                #defaultToNull: defaultToNull,
              },
            ),
            returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
              this,
              Invocation.method(
                #upsert,
                [values],
                {
                  #onConflict: onConflict,
                  #ignoreDuplicates: ignoreDuplicates,
                  #defaultToNull: defaultToNull,
                },
              ),
            ),
          )
          as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> update(Map<dynamic, dynamic>? values) =>
      (super.noSuchMethod(
            Invocation.method(#update, [values]),
            returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
              this,
              Invocation.method(#update, [values]),
            ),
          )
          as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<dynamic> delete() =>
      (super.noSuchMethod(
            Invocation.method(#delete, []),
            returnValue: _FakePostgrestFilterBuilder_7<dynamic>(
              this,
              Invocation.method(#delete, []),
            ),
          )
          as _i2.PostgrestFilterBuilder<dynamic>);

  @override
  _i2.PostgrestFilterBuilder<int> count([
    _i2.CountOption? option = _i2.CountOption.exact,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#count, [option]),
            returnValue: _FakePostgrestFilterBuilder_7<int>(
              this,
              Invocation.method(#count, [option]),
            ),
          )
          as _i2.PostgrestFilterBuilder<int>);

  @override
  _i2.PostgrestQueryBuilder<dynamic> setHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setHeader, [key, value]),
            returnValue: _FakePostgrestQueryBuilder_18<dynamic>(
              this,
              Invocation.method(#setHeader, [key, value]),
            ),
          )
          as _i2.PostgrestQueryBuilder<dynamic>);

  @override
  _i2.PostgrestBuilder<U, U, dynamic> withConverter<U>(
    _i2.PostgrestConverter<U, dynamic>? converter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#withConverter, [converter]),
            returnValue: _FakePostgrestBuilder_19<U, U, dynamic>(
              this,
              Invocation.method(#withConverter, [converter]),
            ),
          )
          as _i2.PostgrestBuilder<U, U, dynamic>);

  @override
  Uri appendSearchParams(String? key, String? value, [Uri? url]) =>
      (super.noSuchMethod(
            Invocation.method(#appendSearchParams, [key, value, url]),
            returnValue: _FakeUri_20(
              this,
              Invocation.method(#appendSearchParams, [key, value, url]),
            ),
          )
          as Uri);

  @override
  Uri overrideSearchParams(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#overrideSearchParams, [key, value]),
            returnValue: _FakeUri_20(
              this,
              Invocation.method(#overrideSearchParams, [key, value]),
            ),
          )
          as Uri);

  @override
  _i3.Stream<dynamic> asStream() =>
      (super.noSuchMethod(
            Invocation.method(#asStream, []),
            returnValue: _i3.Stream<dynamic>.empty(),
          )
          as _i3.Stream<dynamic>);

  @override
  _i3.Future<dynamic> catchError(
    Function? onError, {
    bool Function(Object)? test,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#catchError, [onError], {#test: test}),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<U> then<U>(
    _i3.FutureOr<U> Function(dynamic)? onValue, {
    Function? onError,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#then, [onValue], {#onError: onError}),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<U>(
                    this,
                    Invocation.method(#then, [onValue], {#onError: onError}),
                  ),
                  (U v) => _i3.Future<U>.value(v),
                ) ??
                _FakeFuture_21<U>(
                  this,
                  Invocation.method(#then, [onValue], {#onError: onError}),
                ),
          )
          as _i3.Future<U>);

  @override
  _i3.Future<dynamic> timeout(
    Duration? timeLimit, {
    _i3.FutureOr<dynamic> Function()? onTimeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#timeout, [timeLimit], {#onTimeout: onTimeout}),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> whenComplete(_i3.FutureOr<void> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#whenComplete, [action]),
            returnValue: _i3.Future<dynamic>.value(),
          )
          as _i3.Future<dynamic>);
}

/// A class which mocks [SupabaseStorageClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseStorageClient extends _i1.Mock
    implements _i2.SupabaseStorageClient {
  MockSupabaseStorageClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i4.Fetch get storageFetch =>
      (super.noSuchMethod(
            Invocation.getter(#storageFetch),
            returnValue: _FakeFetch_22(this, Invocation.getter(#storageFetch)),
          )
          as _i4.Fetch);

  @override
  set storageFetch(_i4.Fetch? _storageFetch) => super.noSuchMethod(
    Invocation.setter(#storageFetch, _storageFetch),
    returnValueForMissingStub: null,
  );

  @override
  _i2.StorageFileApi from(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#from, [id]),
            returnValue: _FakeStorageFileApi_23(
              this,
              Invocation.method(#from, [id]),
            ),
          )
          as _i2.StorageFileApi);

  @override
  void setAuth(String? jwt) => super.noSuchMethod(
    Invocation.method(#setAuth, [jwt]),
    returnValueForMissingStub: null,
  );

  @override
  _i3.Future<List<_i2.Bucket>> listBuckets() =>
      (super.noSuchMethod(
            Invocation.method(#listBuckets, []),
            returnValue: _i3.Future<List<_i2.Bucket>>.value(<_i2.Bucket>[]),
          )
          as _i3.Future<List<_i2.Bucket>>);

  @override
  _i3.Future<_i2.Bucket> getBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getBucket, [id]),
            returnValue: _i3.Future<_i2.Bucket>.value(
              _FakeBucket_24(this, Invocation.method(#getBucket, [id])),
            ),
          )
          as _i3.Future<_i2.Bucket>);

  @override
  _i3.Future<String> createBucket(
    String? id, [
    _i2.BucketOptions? bucketOptions = const _i2.BucketOptions(public: false),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#createBucket, [id, bucketOptions]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createBucket, [id, bucketOptions]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> updateBucket(
    String? id,
    _i2.BucketOptions? bucketOptions,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBucket, [id, bucketOptions]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#updateBucket, [id, bucketOptions]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> emptyBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#emptyBucket, [id]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#emptyBucket, [id]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> deleteBucket(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBucket, [id]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#deleteBucket, [id]),
              ),
            ),
          )
          as _i3.Future<String>);
}

/// A class which mocks [StorageFileApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageFileApi extends _i1.Mock implements _i2.StorageFileApi {
  MockStorageFileApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(
            Invocation.getter(#url),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#url)),
          )
          as String);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i3.Future<String> upload(
    String? path,
    _i7.File? file, {
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #upload,
              [path, file],
              {
                #fileOptions: fileOptions,
                #retryAttempts: retryAttempts,
                #retryController: retryController,
              },
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #upload,
                  [path, file],
                  {
                    #fileOptions: fileOptions,
                    #retryAttempts: retryAttempts,
                    #retryController: retryController,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> uploadBinary(
    String? path,
    _i8.Uint8List? data, {
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #uploadBinary,
              [path, data],
              {
                #fileOptions: fileOptions,
                #retryAttempts: retryAttempts,
                #retryController: retryController,
              },
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #uploadBinary,
                  [path, data],
                  {
                    #fileOptions: fileOptions,
                    #retryAttempts: retryAttempts,
                    #retryController: retryController,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> uploadToSignedUrl(
    String? path,
    String? token,
    _i7.File? file, [
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#uploadToSignedUrl, [
              path,
              token,
              file,
              fileOptions,
              retryAttempts,
              retryController,
            ]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadToSignedUrl, [
                  path,
                  token,
                  file,
                  fileOptions,
                  retryAttempts,
                  retryController,
                ]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> uploadBinaryToSignedUrl(
    String? path,
    String? token,
    _i8.Uint8List? data, [
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#uploadBinaryToSignedUrl, [
              path,
              token,
              data,
              fileOptions,
              retryAttempts,
              retryController,
            ]),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadBinaryToSignedUrl, [
                  path,
                  token,
                  data,
                  fileOptions,
                  retryAttempts,
                  retryController,
                ]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<_i2.SignedUploadURLResponse> createSignedUploadUrl(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#createSignedUploadUrl, [path]),
            returnValue: _i3.Future<_i2.SignedUploadURLResponse>.value(
              _FakeSignedUploadURLResponse_25(
                this,
                Invocation.method(#createSignedUploadUrl, [path]),
              ),
            ),
          )
          as _i3.Future<_i2.SignedUploadURLResponse>);

  @override
  _i3.Future<String> update(
    String? path,
    _i7.File? file, {
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #update,
              [path, file],
              {
                #fileOptions: fileOptions,
                #retryAttempts: retryAttempts,
                #retryController: retryController,
              },
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #update,
                  [path, file],
                  {
                    #fileOptions: fileOptions,
                    #retryAttempts: retryAttempts,
                    #retryController: retryController,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> updateBinary(
    String? path,
    _i8.Uint8List? data, {
    _i2.FileOptions? fileOptions = const _i2.FileOptions(),
    int? retryAttempts,
    _i2.StorageRetryController? retryController,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateBinary,
              [path, data],
              {
                #fileOptions: fileOptions,
                #retryAttempts: retryAttempts,
                #retryController: retryController,
              },
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #updateBinary,
                  [path, data],
                  {
                    #fileOptions: fileOptions,
                    #retryAttempts: retryAttempts,
                    #retryController: retryController,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> move(
    String? fromPath,
    String? toPath, {
    String? destinationBucket,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #move,
              [fromPath, toPath],
              {#destinationBucket: destinationBucket},
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #move,
                  [fromPath, toPath],
                  {#destinationBucket: destinationBucket},
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> copy(
    String? fromPath,
    String? toPath, {
    String? destinationBucket,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #copy,
              [fromPath, toPath],
              {#destinationBucket: destinationBucket},
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #copy,
                  [fromPath, toPath],
                  {#destinationBucket: destinationBucket},
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<String> createSignedUrl(
    String? path,
    int? expiresIn, {
    _i2.TransformOptions? transform,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #createSignedUrl,
              [path, expiresIn],
              {#transform: transform},
            ),
            returnValue: _i3.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(
                  #createSignedUrl,
                  [path, expiresIn],
                  {#transform: transform},
                ),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<List<_i2.SignedUrl>> createSignedUrls(
    List<String>? paths,
    int? expiresIn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createSignedUrls, [paths, expiresIn]),
            returnValue: _i3.Future<List<_i2.SignedUrl>>.value(
              <_i2.SignedUrl>[],
            ),
          )
          as _i3.Future<List<_i2.SignedUrl>>);

  @override
  _i3.Future<_i8.Uint8List> download(
    String? path, {
    _i2.TransformOptions? transform,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#download, [path], {#transform: transform}),
            returnValue: _i3.Future<_i8.Uint8List>.value(_i8.Uint8List(0)),
          )
          as _i3.Future<_i8.Uint8List>);

  @override
  _i3.Future<_i2.FileObjectV2> info(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#info, [path]),
            returnValue: _i3.Future<_i2.FileObjectV2>.value(
              _FakeFileObjectV2_26(this, Invocation.method(#info, [path])),
            ),
          )
          as _i3.Future<_i2.FileObjectV2>);

  @override
  _i3.Future<bool> exists(String? path) =>
      (super.noSuchMethod(
            Invocation.method(#exists, [path]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  String getPublicUrl(String? path, {_i2.TransformOptions? transform}) =>
      (super.noSuchMethod(
            Invocation.method(#getPublicUrl, [path], {#transform: transform}),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#getPublicUrl, [path], {#transform: transform}),
            ),
          )
          as String);

  @override
  _i3.Future<List<_i2.FileObject>> remove(List<String>? paths) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [paths]),
            returnValue: _i3.Future<List<_i2.FileObject>>.value(
              <_i2.FileObject>[],
            ),
          )
          as _i3.Future<List<_i2.FileObject>>);

  @override
  _i3.Future<List<_i2.FileObject>> list({
    String? path,
    _i2.SearchOptions? searchOptions = const _i2.SearchOptions(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #path: path,
              #searchOptions: searchOptions,
            }),
            returnValue: _i3.Future<List<_i2.FileObject>>.value(
              <_i2.FileObject>[],
            ),
          )
          as _i3.Future<List<_i2.FileObject>>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  Map<String, dynamic> get appMetadata =>
      (super.noSuchMethod(
            Invocation.getter(#appMetadata),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String get aud =>
      (super.noSuchMethod(
            Invocation.getter(#aud),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#aud)),
          )
          as String);

  @override
  String get createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#createdAt),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
          )
          as String);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(Invocation.getter(#isAnonymous), returnValue: false)
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i9.ImagePicker {
  MockImagePicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i5.XFile?> pickImage({
    required _i5.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i5.CameraDevice? preferredCameraDevice = _i5.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickImage, [], {
              #source: source,
              #maxWidth: maxWidth,
              #maxHeight: maxHeight,
              #imageQuality: imageQuality,
              #preferredCameraDevice: preferredCameraDevice,
              #requestFullMetadata: requestFullMetadata,
            }),
            returnValue: _i3.Future<_i5.XFile?>.value(),
          )
          as _i3.Future<_i5.XFile?>);

  @override
  _i3.Future<List<_i5.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickMultiImage, [], {
              #maxWidth: maxWidth,
              #maxHeight: maxHeight,
              #imageQuality: imageQuality,
              #limit: limit,
              #requestFullMetadata: requestFullMetadata,
            }),
            returnValue: _i3.Future<List<_i5.XFile>>.value(<_i5.XFile>[]),
          )
          as _i3.Future<List<_i5.XFile>>);

  @override
  _i3.Future<_i5.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickMedia, [], {
              #maxWidth: maxWidth,
              #maxHeight: maxHeight,
              #imageQuality: imageQuality,
              #requestFullMetadata: requestFullMetadata,
            }),
            returnValue: _i3.Future<_i5.XFile?>.value(),
          )
          as _i3.Future<_i5.XFile?>);

  @override
  _i3.Future<List<_i5.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickMultipleMedia, [], {
              #maxWidth: maxWidth,
              #maxHeight: maxHeight,
              #imageQuality: imageQuality,
              #limit: limit,
              #requestFullMetadata: requestFullMetadata,
            }),
            returnValue: _i3.Future<List<_i5.XFile>>.value(<_i5.XFile>[]),
          )
          as _i3.Future<List<_i5.XFile>>);

  @override
  _i3.Future<_i5.XFile?> pickVideo({
    required _i5.ImageSource? source,
    _i5.CameraDevice? preferredCameraDevice = _i5.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#pickVideo, [], {
              #source: source,
              #preferredCameraDevice: preferredCameraDevice,
              #maxDuration: maxDuration,
            }),
            returnValue: _i3.Future<_i5.XFile?>.value(),
          )
          as _i3.Future<_i5.XFile?>);

  @override
  _i3.Future<_i5.LostDataResponse> retrieveLostData() =>
      (super.noSuchMethod(
            Invocation.method(#retrieveLostData, []),
            returnValue: _i3.Future<_i5.LostDataResponse>.value(
              _FakeLostDataResponse_27(
                this,
                Invocation.method(#retrieveLostData, []),
              ),
            ),
          )
          as _i3.Future<_i5.LostDataResponse>);

  @override
  bool supportsImageSource(_i5.ImageSource? source) =>
      (super.noSuchMethod(
            Invocation.method(#supportsImageSource, [source]),
            returnValue: false,
          )
          as bool);
}
